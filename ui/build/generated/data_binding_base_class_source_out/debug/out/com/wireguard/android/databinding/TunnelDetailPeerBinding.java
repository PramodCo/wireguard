// Generated by data binding compiler. Do not edit!
package com.wireguard.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textview.MaterialTextView;
import com.wireguard.android.R;
import com.wireguard.config.Peer;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class TunnelDetailPeerBinding extends ViewDataBinding {
  @NonNull
  public final TextView allowedIpsLabel;

  @NonNull
  public final TextView allowedIpsText;

  @NonNull
  public final TextView endpointLabel;

  @NonNull
  public final TextView endpointText;

  @NonNull
  public final MaterialTextView peerTitle;

  @NonNull
  public final TextView persistentKeepaliveLabel;

  @NonNull
  public final TextView persistentKeepaliveText;

  @NonNull
  public final TextView preSharedKeyLabel;

  @NonNull
  public final TextView preSharedKeyText;

  @NonNull
  public final TextView publicKeyLabel;

  @NonNull
  public final TextView publicKeyText;

  @NonNull
  public final TextView transferLabel;

  @NonNull
  public final TextView transferText;

  @Bindable
  protected Peer mItem;

  protected TunnelDetailPeerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView allowedIpsLabel, TextView allowedIpsText, TextView endpointLabel,
      TextView endpointText, MaterialTextView peerTitle, TextView persistentKeepaliveLabel,
      TextView persistentKeepaliveText, TextView preSharedKeyLabel, TextView preSharedKeyText,
      TextView publicKeyLabel, TextView publicKeyText, TextView transferLabel,
      TextView transferText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.allowedIpsLabel = allowedIpsLabel;
    this.allowedIpsText = allowedIpsText;
    this.endpointLabel = endpointLabel;
    this.endpointText = endpointText;
    this.peerTitle = peerTitle;
    this.persistentKeepaliveLabel = persistentKeepaliveLabel;
    this.persistentKeepaliveText = persistentKeepaliveText;
    this.preSharedKeyLabel = preSharedKeyLabel;
    this.preSharedKeyText = preSharedKeyText;
    this.publicKeyLabel = publicKeyLabel;
    this.publicKeyText = publicKeyText;
    this.transferLabel = transferLabel;
    this.transferText = transferText;
  }

  public abstract void setItem(@Nullable Peer item);

  @Nullable
  public Peer getItem() {
    return mItem;
  }

  @NonNull
  public static TunnelDetailPeerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_detail_peer, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TunnelDetailPeerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TunnelDetailPeerBinding>inflateInternal(inflater, R.layout.tunnel_detail_peer, root, attachToRoot, component);
  }

  @NonNull
  public static TunnelDetailPeerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_detail_peer, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TunnelDetailPeerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TunnelDetailPeerBinding>inflateInternal(inflater, R.layout.tunnel_detail_peer, null, false, component);
  }

  public static TunnelDetailPeerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TunnelDetailPeerBinding bind(@NonNull View view, @Nullable Object component) {
    return (TunnelDetailPeerBinding)bind(component, view, R.layout.tunnel_detail_peer);
  }
}
