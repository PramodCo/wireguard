// Generated by data binding compiler. Do not edit!
package com.wireguard.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.wireguard.android.R;
import com.wireguard.android.fragment.TunnelDetailFragment;
import com.wireguard.android.model.ObservableTunnel;
import com.wireguard.android.widget.ToggleSwitch;
import com.wireguard.config.Config;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class TunnelDetailFragmentBinding extends ViewDataBinding {
  @NonNull
  public final TextView addressesLabel;

  @NonNull
  public final TextView addressesText;

  @NonNull
  public final TextView applicationsLabel;

  @NonNull
  public final TextView applicationsText;

  @NonNull
  public final TextView dnsServersLabel;

  @NonNull
  public final TextView dnsServersText;

  @NonNull
  public final TextView interfaceNameLabel;

  @NonNull
  public final TextView interfaceNameText;

  @NonNull
  public final MaterialTextView interfaceTitle;

  @NonNull
  public final TextView listenPortLabel;

  @NonNull
  public final TextView listenPortText;

  @NonNull
  public final TextView mtuLabel;

  @NonNull
  public final TextView mtuText;

  @NonNull
  public final LinearLayout peersLayout;

  @NonNull
  public final TextView publicKeyLabel;

  @NonNull
  public final TextView publicKeyText;

  @NonNull
  public final MaterialCardView tunnelDetailCard;

  @NonNull
  public final ToggleSwitch tunnelSwitch;

  @Bindable
  protected TunnelDetailFragment mFragment;

  @Bindable
  protected ObservableTunnel mTunnel;

  @Bindable
  protected Config mConfig;

  protected TunnelDetailFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView addressesLabel, TextView addressesText, TextView applicationsLabel,
      TextView applicationsText, TextView dnsServersLabel, TextView dnsServersText,
      TextView interfaceNameLabel, TextView interfaceNameText, MaterialTextView interfaceTitle,
      TextView listenPortLabel, TextView listenPortText, TextView mtuLabel, TextView mtuText,
      LinearLayout peersLayout, TextView publicKeyLabel, TextView publicKeyText,
      MaterialCardView tunnelDetailCard, ToggleSwitch tunnelSwitch) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addressesLabel = addressesLabel;
    this.addressesText = addressesText;
    this.applicationsLabel = applicationsLabel;
    this.applicationsText = applicationsText;
    this.dnsServersLabel = dnsServersLabel;
    this.dnsServersText = dnsServersText;
    this.interfaceNameLabel = interfaceNameLabel;
    this.interfaceNameText = interfaceNameText;
    this.interfaceTitle = interfaceTitle;
    this.listenPortLabel = listenPortLabel;
    this.listenPortText = listenPortText;
    this.mtuLabel = mtuLabel;
    this.mtuText = mtuText;
    this.peersLayout = peersLayout;
    this.publicKeyLabel = publicKeyLabel;
    this.publicKeyText = publicKeyText;
    this.tunnelDetailCard = tunnelDetailCard;
    this.tunnelSwitch = tunnelSwitch;
  }

  public abstract void setFragment(@Nullable TunnelDetailFragment fragment);

  @Nullable
  public TunnelDetailFragment getFragment() {
    return mFragment;
  }

  public abstract void setTunnel(@Nullable ObservableTunnel tunnel);

  @Nullable
  public ObservableTunnel getTunnel() {
    return mTunnel;
  }

  public abstract void setConfig(@Nullable Config config);

  @Nullable
  public Config getConfig() {
    return mConfig;
  }

  @NonNull
  public static TunnelDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_detail_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TunnelDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TunnelDetailFragmentBinding>inflateInternal(inflater, R.layout.tunnel_detail_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static TunnelDetailFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_detail_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TunnelDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TunnelDetailFragmentBinding>inflateInternal(inflater, R.layout.tunnel_detail_fragment, null, false, component);
  }

  public static TunnelDetailFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TunnelDetailFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (TunnelDetailFragmentBinding)bind(component, view, R.layout.tunnel_detail_fragment);
  }
}
