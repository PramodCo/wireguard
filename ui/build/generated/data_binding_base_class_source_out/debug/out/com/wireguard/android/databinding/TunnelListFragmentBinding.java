// Generated by data binding compiler. Do not edit!
package com.wireguard.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.wireguard.android.R;
import com.wireguard.android.fragment.TunnelListFragment;
import com.wireguard.android.model.ObservableTunnel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class TunnelListFragmentBinding extends ViewDataBinding {
  @NonNull
  public final FloatingActionButton createFab;

  @NonNull
  public final AppCompatImageView logoPlaceholder;

  @NonNull
  public final CoordinatorLayout mainContainer;

  @NonNull
  public final RecyclerView tunnelList;

  @Bindable
  protected TunnelListFragment mFragment;

  @Bindable
  protected ObservableKeyedRecyclerViewAdapter.RowConfigurationHandler mRowConfigurationHandler;

  @Bindable
  protected ObservableKeyedArrayList<String, ObservableTunnel> mTunnels;

  protected TunnelListFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FloatingActionButton createFab, AppCompatImageView logoPlaceholder,
      CoordinatorLayout mainContainer, RecyclerView tunnelList) {
    super(_bindingComponent, _root, _localFieldCount);
    this.createFab = createFab;
    this.logoPlaceholder = logoPlaceholder;
    this.mainContainer = mainContainer;
    this.tunnelList = tunnelList;
  }

  public abstract void setFragment(@Nullable TunnelListFragment fragment);

  @Nullable
  public TunnelListFragment getFragment() {
    return mFragment;
  }

  public abstract void setRowConfigurationHandler(
      @Nullable ObservableKeyedRecyclerViewAdapter.RowConfigurationHandler rowConfigurationHandler);

  @Nullable
  public ObservableKeyedRecyclerViewAdapter.RowConfigurationHandler getRowConfigurationHandler() {
    return mRowConfigurationHandler;
  }

  public abstract void setTunnels(
      @Nullable ObservableKeyedArrayList<String, ObservableTunnel> tunnels);

  @Nullable
  public ObservableKeyedArrayList<String, ObservableTunnel> getTunnels() {
    return mTunnels;
  }

  @NonNull
  public static TunnelListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_list_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TunnelListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TunnelListFragmentBinding>inflateInternal(inflater, R.layout.tunnel_list_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static TunnelListFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_list_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TunnelListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TunnelListFragmentBinding>inflateInternal(inflater, R.layout.tunnel_list_fragment, null, false, component);
  }

  public static TunnelListFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TunnelListFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (TunnelListFragmentBinding)bind(component, view, R.layout.tunnel_list_fragment);
  }
}
