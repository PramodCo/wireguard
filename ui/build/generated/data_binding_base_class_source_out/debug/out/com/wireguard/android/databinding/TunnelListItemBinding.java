// Generated by data binding compiler. Do not edit!
package com.wireguard.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.wireguard.android.R;
import com.wireguard.android.fragment.TunnelListFragment;
import com.wireguard.android.model.ObservableTunnel;
import com.wireguard.android.widget.MultiselectableRelativeLayout;
import com.wireguard.android.widget.ToggleSwitch;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class TunnelListItemBinding extends ViewDataBinding {
  @NonNull
  public final MultiselectableRelativeLayout tunnelListItem;

  @NonNull
  public final TextView tunnelName;

  @NonNull
  public final ToggleSwitch tunnelSwitch;

  @Bindable
  protected ObservableKeyedArrayList<String, ObservableTunnel> mCollection;

  @Bindable
  protected String mKey;

  @Bindable
  protected ObservableTunnel mItem;

  @Bindable
  protected TunnelListFragment mFragment;

  protected TunnelListItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MultiselectableRelativeLayout tunnelListItem, TextView tunnelName,
      ToggleSwitch tunnelSwitch) {
    super(_bindingComponent, _root, _localFieldCount);
    this.tunnelListItem = tunnelListItem;
    this.tunnelName = tunnelName;
    this.tunnelSwitch = tunnelSwitch;
  }

  public abstract void setCollection(
      @Nullable ObservableKeyedArrayList<String, ObservableTunnel> collection);

  @Nullable
  public ObservableKeyedArrayList<String, ObservableTunnel> getCollection() {
    return mCollection;
  }

  public abstract void setKey(@Nullable String key);

  @Nullable
  public String getKey() {
    return mKey;
  }

  public abstract void setItem(@Nullable ObservableTunnel item);

  @Nullable
  public ObservableTunnel getItem() {
    return mItem;
  }

  public abstract void setFragment(@Nullable TunnelListFragment fragment);

  @Nullable
  public TunnelListFragment getFragment() {
    return mFragment;
  }

  @NonNull
  public static TunnelListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_list_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TunnelListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TunnelListItemBinding>inflateInternal(inflater, R.layout.tunnel_list_item, root, attachToRoot, component);
  }

  @NonNull
  public static TunnelListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tunnel_list_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TunnelListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TunnelListItemBinding>inflateInternal(inflater, R.layout.tunnel_list_item, null, false, component);
  }

  public static TunnelListItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TunnelListItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (TunnelListItemBinding)bind(component, view, R.layout.tunnel_list_item);
  }
}
